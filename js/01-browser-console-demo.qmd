
## Demo 1: console {#sec-js-console}

*in der browser Console*


String Variablen erstellen:

```js
// just like in R, but not correct
myname = "Nils Ratnaweera"

// use var to create a new variable
// ommiting var works and if you're in the global scope then
// there's not much difference. https://stackoverflow.com/a/1470494/4139249
var myname = "Nils Ratnaweera"

// end statement with a semi colon
var myname = "Nils Ratnaweera";
```

Den `typeof` überprüfen

```js
typeof(myname)
```


Numerische Variablen erstellen

```js
// create a number in quotes
var myage = "34";

// check the type of this number
typeof(myage);
// why is this not a number, but a string?

// you can't do maths
myage+1;

```

```js
// number are not in quotes (just like in R)
var myage = 34;

typeof(myage);

// now, you can do math
myage+1

myage*365;

// you can also create variables "on the fly"
var myage_days = myage*365;

```
Ihr könnt Variablen zuerst erstellen und später füllen

```js
var myage_days;

myage_days = myage*365;
```

Ihr könnt auf die console ausgeben, indem ihr die Variable aufruft (genau wie in R).
Aber das funktioniert nur von der interaktiven console aus.

```js
myage_days;
console.log(myage_days);

// dont write print(myage_days); !
```

`let` und `const` sind andere Wege, um Variablen zu erstellen mit subtilen Unterschieden, aber wir werden diese in unserer Lektion ignorieren.

```js
let email = "rata@zhaw.ch";
const employer = "ZHAW";
```